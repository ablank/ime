<?php

/**
 * @file
 * Primary module file.
 */

/**
 * Implements hook_theme().
 */
function imediaelement_theme($existing, $type, $theme, $path) {
  $defaults = [
    'variables' => [
      'files' => [],
      'attributes' => NULL,
      'download_link' => FALSE,
      'download_text' => t('Download'),
    ],
    'path' => "${path}/templates",
    'preprocess functions' => [
      'imediaelement_preprocess_imediaelement_file',
    ],
  ];

  return [
    'imediaelement_audio' => [] + $defaults,
    'imediaelement_video' => [] + $defaults,
  ];
}

/**
 * Implements hook_file_mimetype_mapping_alter()
 */
function imediaelement_file_mimetype_mapping_alter(&$mapping) {

  $mapping['mimetypes']['youtube'] = 'video/youtube';
}

/**
 * Implements hook_preprocess_html().
 */
function imediaelement_preprocess_html(&$variables) {
  $config = \Drupal::config('imediaelement.settings');
  //dpm($config);

  $settings = $config->get();//imediaelement_parse_config($config);
///dpm($settings);
  $variables['#attached']['drupalSettings']['imediaelement'] = $settings;
}

/**
 * Implements hook_preprocess_imediaelement_file().
 */
function imediaelement_preprocess_imediaelement_file(&$variables) {
  $variables['attributes']->addClass('imediaelementjs');
  /*
  $file = Media::load(your_file_id);
  $file_uri = $file->field_file->entity->getFileUri();
  $file_downloadable_link = file_create_url($file_uri);
   */
}

/**
 * Converts module config to javascript.
 *
 * @param object $confg
 *   Config items.
 */
function imediaelement_parse_config($config) {
  $settings = [];
  //$config = imediaelement_flatten_array($config);
  // Prepare config for Javascript.
  foreach ($config as $setting => $value) {
    // Camel case the setting name.
    $settingCamel = str_replace('_', '', lcfirst(ucwords($setting, '_')));
    $settings[$settingCamel] = $value;
  }
  return $settings;
}

/**
 * Flattens nested array into a single level array.
 *
 * @param array $array
 *   An array of items.
 * @param array $return
 *   The starting point of the return values.
 *
 * @return array
 *   The flattened array.
 */
function imediaelement_flatten_array(array $array, array $return = []) {
  foreach ($array as $key => $value) {
    if (is_array($value)) {
      $return = imediaelement_flatten_array($value, $return);
    }
    else {
      $return[$key] = $value;
    }
  }

  return $return;
}

